{"ast":null,"code":"// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    BridgedBlockHash: 'H256',\n    BridgedBlockNumber: 'BlockNumber',\n    BridgedHeader: 'Header',\n    BridgeMessageId: '(LaneId, MessageNonce)',\n    CallOrigin: {\n      _enum: {\n        SourceRoot: 'Null',\n        TargetAccount: '(AccountId, MultiSigner, MultiSignature)',\n        SourceAccount: 'AccountId'\n      }\n    },\n    ChainId: '[u8; 4]',\n    DeliveredMessages: {\n      begin: 'MessageNonce',\n      end: 'MessageNonce',\n      // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;\n      dispatchResults: 'BitVec'\n    },\n    DispatchFeePayment: {\n      _enum: ['AtSourceChain', 'AtTargetChain']\n    },\n    InboundLaneData: {\n      relayers: 'Vec<UnrewardedRelayer>',\n      lastConfirmedNonce: 'MessageNonce'\n    },\n    InboundRelayer: 'AccountId',\n    InitializationData: {\n      header: 'Header',\n      authorityList: 'AuthorityList',\n      setId: 'SetId',\n      isHalted: 'bool'\n    },\n    LaneId: '[u8; 4]',\n    MessageData: {\n      payload: 'Bytes',\n      fee: 'Balance'\n    },\n    MessagesDeliveryProofOf: {\n      bridgedHeaderHash: 'BlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId'\n    },\n    MessageKey: {\n      laneId: 'LaneId',\n      nonce: 'MessageNonce'\n    },\n    MessageNonce: 'u64',\n    MessagesProofOf: {\n      bridgedHeaderHash: 'BridgedBlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId',\n      noncesStart: 'MessageNonce',\n      noncesEnd: 'MessageNonce'\n    },\n    OperatingMode: {\n      _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']\n    },\n    OutboundLaneData: {\n      oldestUnprunedNonce: 'MessageNonce',\n      latestReceivedNonce: 'MessageNonce',\n      latestGeneratedNonce: 'MessageNonce'\n    },\n    OutboundMessageFee: 'Balance',\n    OutboundPayload: {\n      specVersion: 'u32',\n      weight: 'Weight',\n      origin: 'CallOrigin',\n      dispatchFeePayment: 'DispatchFeePayment',\n      call: 'Bytes'\n    },\n    Parameter: 'Null',\n    RelayerId: 'AccountId',\n    UnrewardedRelayer: {\n      relayer: 'RelayerId',\n      messages: 'DeliveredMessages'\n    },\n    UnrewardedRelayersState: {\n      unrewardedRelayer_Entries: 'MessageNonce',\n      messagesInOldestEntry: 'MessageNonce',\n      totalMessages: 'MessageNonce'\n    }\n  }\n};","map":{"version":3,"sources":["/Users/mario/p/dapp-test/node_modules/@polkadot/types/interfaces/bridges/definitions.js"],"names":["rpc","types","BridgedBlockHash","BridgedBlockNumber","BridgedHeader","BridgeMessageId","CallOrigin","_enum","SourceRoot","TargetAccount","SourceAccount","ChainId","DeliveredMessages","begin","end","dispatchResults","DispatchFeePayment","InboundLaneData","relayers","lastConfirmedNonce","InboundRelayer","InitializationData","header","authorityList","setId","isHalted","LaneId","MessageData","payload","fee","MessagesDeliveryProofOf","bridgedHeaderHash","storageProof","lane","MessageKey","laneId","nonce","MessageNonce","MessagesProofOf","noncesStart","noncesEnd","OperatingMode","OutboundLaneData","oldestUnprunedNonce","latestReceivedNonce","latestGeneratedNonce","OutboundMessageFee","OutboundPayload","specVersion","weight","origin","dispatchFeePayment","call","Parameter","RelayerId","UnrewardedRelayer","relayer","messages","UnrewardedRelayersState","unrewardedRelayer_Entries","messagesInOldestEntry","totalMessages"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,eAAe;AACbA,EAAAA,GAAG,EAAE,EADQ;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,gBAAgB,EAAE,MADb;AAELC,IAAAA,kBAAkB,EAAE,aAFf;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,eAAe,EAAE,wBAJZ;AAKLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,MADP;AAELC,QAAAA,aAAa,EAAE,0CAFV;AAGLC,QAAAA,aAAa,EAAE;AAHV;AADG,KALP;AAYLC,IAAAA,OAAO,EAAE,SAZJ;AAaLC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,KAAK,EAAE,cADU;AAEjBC,MAAAA,GAAG,EAAE,cAFY;AAGjB;AACAC,MAAAA,eAAe,EAAE;AAJA,KAbd;AAmBLC,IAAAA,kBAAkB,EAAE;AAClBT,MAAAA,KAAK,EAAE,CAAC,eAAD,EAAkB,eAAlB;AADW,KAnBf;AAsBLU,IAAAA,eAAe,EAAE;AACfC,MAAAA,QAAQ,EAAE,wBADK;AAEfC,MAAAA,kBAAkB,EAAE;AAFL,KAtBZ;AA0BLC,IAAAA,cAAc,EAAE,WA1BX;AA2BLC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,MAAM,EAAE,QADU;AAElBC,MAAAA,aAAa,EAAE,eAFG;AAGlBC,MAAAA,KAAK,EAAE,OAHW;AAIlBC,MAAAA,QAAQ,EAAE;AAJQ,KA3Bf;AAiCLC,IAAAA,MAAM,EAAE,SAjCH;AAkCLC,IAAAA,WAAW,EAAE;AACXC,MAAAA,OAAO,EAAE,OADE;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAlCR;AAsCLC,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,iBAAiB,EAAE,WADI;AAEvBC,MAAAA,YAAY,EAAE,YAFS;AAGvBC,MAAAA,IAAI,EAAE;AAHiB,KAtCpB;AA2CLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EAAE,QADE;AAEVC,MAAAA,KAAK,EAAE;AAFG,KA3CP;AA+CLC,IAAAA,YAAY,EAAE,KA/CT;AAgDLC,IAAAA,eAAe,EAAE;AACfP,MAAAA,iBAAiB,EAAE,kBADJ;AAEfC,MAAAA,YAAY,EAAE,YAFC;AAGfC,MAAAA,IAAI,EAAE,QAHS;AAIfM,MAAAA,WAAW,EAAE,cAJE;AAKfC,MAAAA,SAAS,EAAE;AALI,KAhDZ;AAuDLC,IAAAA,aAAa,EAAE;AACblC,MAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,2BAAX,EAAwC,QAAxC;AADM,KAvDV;AA0DLmC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,mBAAmB,EAAE,cADL;AAEhBC,MAAAA,mBAAmB,EAAE,cAFL;AAGhBC,MAAAA,oBAAoB,EAAE;AAHN,KA1Db;AA+DLC,IAAAA,kBAAkB,EAAE,SA/Df;AAgELC,IAAAA,eAAe,EAAE;AACfC,MAAAA,WAAW,EAAE,KADE;AAEfC,MAAAA,MAAM,EAAE,QAFO;AAGfC,MAAAA,MAAM,EAAE,YAHO;AAIfC,MAAAA,kBAAkB,EAAE,oBAJL;AAKfC,MAAAA,IAAI,EAAE;AALS,KAhEZ;AAuELC,IAAAA,SAAS,EAAE,MAvEN;AAwELC,IAAAA,SAAS,EAAE,WAxEN;AAyELC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,OAAO,EAAE,WADQ;AAEjBC,MAAAA,QAAQ,EAAE;AAFO,KAzEd;AA6ELC,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,yBAAyB,EAAE,cADJ;AAEvBC,MAAAA,qBAAqB,EAAE,cAFA;AAGvBC,MAAAA,aAAa,EAAE;AAHQ;AA7EpB;AAFM,CAAf","sourcesContent":["// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    BridgedBlockHash: 'H256',\n    BridgedBlockNumber: 'BlockNumber',\n    BridgedHeader: 'Header',\n    BridgeMessageId: '(LaneId, MessageNonce)',\n    CallOrigin: {\n      _enum: {\n        SourceRoot: 'Null',\n        TargetAccount: '(AccountId, MultiSigner, MultiSignature)',\n        SourceAccount: 'AccountId'\n      }\n    },\n    ChainId: '[u8; 4]',\n    DeliveredMessages: {\n      begin: 'MessageNonce',\n      end: 'MessageNonce',\n      // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;\n      dispatchResults: 'BitVec'\n    },\n    DispatchFeePayment: {\n      _enum: ['AtSourceChain', 'AtTargetChain']\n    },\n    InboundLaneData: {\n      relayers: 'Vec<UnrewardedRelayer>',\n      lastConfirmedNonce: 'MessageNonce'\n    },\n    InboundRelayer: 'AccountId',\n    InitializationData: {\n      header: 'Header',\n      authorityList: 'AuthorityList',\n      setId: 'SetId',\n      isHalted: 'bool'\n    },\n    LaneId: '[u8; 4]',\n    MessageData: {\n      payload: 'Bytes',\n      fee: 'Balance'\n    },\n    MessagesDeliveryProofOf: {\n      bridgedHeaderHash: 'BlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId'\n    },\n    MessageKey: {\n      laneId: 'LaneId',\n      nonce: 'MessageNonce'\n    },\n    MessageNonce: 'u64',\n    MessagesProofOf: {\n      bridgedHeaderHash: 'BridgedBlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId',\n      noncesStart: 'MessageNonce',\n      noncesEnd: 'MessageNonce'\n    },\n    OperatingMode: {\n      _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']\n    },\n    OutboundLaneData: {\n      oldestUnprunedNonce: 'MessageNonce',\n      latestReceivedNonce: 'MessageNonce',\n      latestGeneratedNonce: 'MessageNonce'\n    },\n    OutboundMessageFee: 'Balance',\n    OutboundPayload: {\n      specVersion: 'u32',\n      weight: 'Weight',\n      origin: 'CallOrigin',\n      dispatchFeePayment: 'DispatchFeePayment',\n      call: 'Bytes'\n    },\n    Parameter: 'Null',\n    RelayerId: 'AccountId',\n    UnrewardedRelayer: {\n      relayer: 'RelayerId',\n      messages: 'DeliveredMessages'\n    },\n    UnrewardedRelayersState: {\n      unrewardedRelayer_Entries: 'MessageNonce',\n      messagesInOldestEntry: 'MessageNonce',\n      totalMessages: 'MessageNonce'\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}