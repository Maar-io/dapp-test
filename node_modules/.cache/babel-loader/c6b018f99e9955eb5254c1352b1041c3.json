{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable sort-keys */\n\n\nimport { mapXcm } from '@polkadot/types/interfaces/xcm/definitions'; // structs need to be in order\n\n/* eslint-disable sort-keys */\n\nconst sharedTypes = {\n  FullIdentification: '()',\n  // No staking, only session (as per config)\n  Keys: 'SessionKeys7B'\n};\nconst versioned = [{\n  minmax: [0, 200],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithDualRefCount',\n    Address: 'AccountId',\n    LookupSource: 'AccountId'\n  })\n}, {\n  minmax: [201, 214],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithDualRefCount'\n  })\n}, {\n  minmax: [215, 228],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    Keys: 'SessionKeys6'\n  })\n}, {\n  minmax: [229, 9099],\n  types: _objectSpread(_objectSpread({}, sharedTypes), mapXcm('V0'))\n}, {\n  minmax: [9100, 9105],\n  types: _objectSpread(_objectSpread({}, sharedTypes), mapXcm('V1'))\n}, {\n  // metadata v14\n  minmax: [9106, undefined],\n  types: _objectSpread({}, sharedTypes)\n}];\nexport default versioned;","map":{"version":3,"sources":["/Users/mario/p/dapp-test/node_modules/@polkadot/types-known/spec/rococo.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","mapXcm","sharedTypes","FullIdentification","Keys","versioned","minmax","types","AccountInfo","Address","LookupSource","undefined"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable sort-keys */\nimport { mapXcm } from '@polkadot/types/interfaces/xcm/definitions'; // structs need to be in order\n\n/* eslint-disable sort-keys */\n\nconst sharedTypes = {\n  FullIdentification: '()',\n  // No staking, only session (as per config)\n  Keys: 'SessionKeys7B'\n};\nconst versioned = [{\n  minmax: [0, 200],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithDualRefCount',\n    Address: 'AccountId',\n    LookupSource: 'AccountId'\n  })\n}, {\n  minmax: [201, 214],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    AccountInfo: 'AccountInfoWithDualRefCount'\n  })\n}, {\n  minmax: [215, 228],\n  types: _objectSpread(_objectSpread({}, sharedTypes), {}, {\n    Keys: 'SessionKeys6'\n  })\n}, {\n  minmax: [229, 9099],\n  types: _objectSpread(_objectSpread({}, sharedTypes), mapXcm('V0'))\n}, {\n  minmax: [9100, 9105],\n  types: _objectSpread(_objectSpread({}, sharedTypes), mapXcm('V1'))\n}, {\n  // metadata v14\n  minmax: [9106, undefined],\n  types: _objectSpread({}, sharedTypes)\n}];\nexport default versioned;"]},"metadata":{},"sourceType":"module"}