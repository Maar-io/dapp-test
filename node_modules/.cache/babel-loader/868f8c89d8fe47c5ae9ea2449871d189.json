{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\n\nimport { v0 } from \"./v0.js\";\nimport { v1 } from \"./v1.js\";\nimport { v2 } from \"./v2.js\";\nexport const XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];\nconst XCM_LATEST = 'V2';\nexport function mapXcm(version) {\n  return XCM_MAPPINGS.reduce((all, key) => _objectSpread(_objectSpread({}, all), {}, {\n    [key]: `${key}${version}`\n  }), {});\n}\nconst xcm = {\n  XcmOrigin: {\n    _enum: {\n      Xcm: 'MultiLocation'\n    }\n  },\n  XcmpMessageFormat: {\n    _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']\n  },\n  XcmAssetId: {\n    _enum: {\n      Concrete: 'MultiLocation',\n      Abstract: 'Bytes'\n    }\n  },\n  InboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  OutboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  MultiAssets: 'Vec<MultiAsset>'\n};\nconst location = {\n  BodyId: {\n    _enum: {\n      Unit: 'Null',\n      Named: 'Vec<u8>',\n      Index: 'Compact<u32>',\n      Executive: 'Null',\n      Technical: 'Null',\n      Legislative: 'Null',\n      Judicial: 'Null'\n    }\n  },\n  BodyPart: {\n    _enum: {\n      Voice: 'Null',\n      Members: 'Compact<u32>',\n      Fraction: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      AtLeastProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      MoreThanProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      }\n    }\n  },\n  InteriorMultiLocation: 'Junctions',\n  NetworkId: {\n    _enum: {\n      Any: 'Null',\n      Named: 'Vec<u8>',\n      Polkadot: 'Null',\n      Kusama: 'Null'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, location), xcm), v0), v1), v2), mapXcm(XCM_LATEST)), {}, {\n    DoubleEncodedCall: {\n      encoded: 'Vec<u8>'\n    },\n    XcmOriginKind: {\n      _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n    },\n    Outcome: {\n      _enum: {\n        Complete: 'Weight',\n        Incomplete: '(Weight, XcmErrorV0)',\n        Error: 'XcmErrorV0'\n      }\n    },\n    QueryId: 'u64',\n    QueryStatus: {\n      _enum: {\n        Pending: {\n          responder: 'VersionedMultiLocation',\n          maybeNotify: 'Option<(u8, u8)>',\n          timeout: 'BlockNumber'\n        },\n        Ready: {\n          response: 'VersionedResponse',\n          at: 'BlockNumber'\n        }\n      }\n    },\n    QueueConfigData: {\n      suspendThreshold: 'u32',\n      dropThreshold: 'u32',\n      resumeThreshold: 'u32',\n      thresholdWeight: 'Weight',\n      weightRestrictDecay: 'Weight'\n    },\n    VersionMigrationStage: {\n      _enum: {\n        MigrateSupportedVersion: 'Null',\n        MigrateVersionNotifiers: 'Null',\n        NotifyCurrentTargets: 'Option<Bytes>',\n        MigrateAndNotifyOldTargets: 'Null'\n      }\n    },\n    VersionedMultiAsset: {\n      _enum: {\n        V0: 'MultiAssetV0',\n        V1: 'MultiAssetV1',\n        V2: 'MultiAssetV2'\n      }\n    },\n    VersionedMultiAssets: {\n      _enum: {\n        V0: 'Vec<MultiAssetV0>',\n        V1: 'MultiAssetsV1',\n        V2: 'MultiAssetsV2'\n      }\n    },\n    VersionedMultiLocation: {\n      _enum: {\n        V0: 'MultiLocationV0',\n        V1: 'MultiLocationV1',\n        V2: 'MultiLocationV2'\n      }\n    },\n    VersionedResponse: {\n      V0: 'ResponseV0',\n      V1: 'ResponseV1',\n      V2: 'ResponseV2'\n    },\n    VersionedXcm: {\n      _enum: {\n        V0: 'XcmV0',\n        V1: 'XcmV1',\n        V2: 'XcmV2'\n      }\n    },\n    XcmVersion: 'u32'\n  })\n};","map":{"version":3,"sources":["/Users/mario/p/dapp-test/node_modules/@polkadot/types/interfaces/xcm/definitions.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","v0","v1","v2","XCM_MAPPINGS","XCM_LATEST","mapXcm","version","reduce","all","xcm","XcmOrigin","_enum","Xcm","XcmpMessageFormat","XcmAssetId","Concrete","Abstract","InboundStatus","OutboundStatus","MultiAssets","location","BodyId","Unit","Named","Index","Executive","Technical","Legislative","Judicial","BodyPart","Voice","Members","Fraction","nom","denom","AtLeastProportion","MoreThanProportion","InteriorMultiLocation","NetworkId","Any","Polkadot","Kusama","rpc","types","DoubleEncodedCall","encoded","XcmOriginKind","Outcome","Complete","Incomplete","Error","QueryId","QueryStatus","Pending","responder","maybeNotify","timeout","Ready","response","at","QueueConfigData","suspendThreshold","dropThreshold","resumeThreshold","thresholdWeight","weightRestrictDecay","VersionMigrationStage","MigrateSupportedVersion","MigrateVersionNotifiers","NotifyCurrentTargets","MigrateAndNotifyOldTargets","VersionedMultiAsset","V0","V1","V2","VersionedMultiAssets","VersionedMultiLocation","VersionedResponse","VersionedXcm","XcmVersion"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { v0 } from \"./v0.js\";\nimport { v1 } from \"./v1.js\";\nimport { v2 } from \"./v2.js\";\nexport const XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];\nconst XCM_LATEST = 'V2';\nexport function mapXcm(version) {\n  return XCM_MAPPINGS.reduce((all, key) => _objectSpread(_objectSpread({}, all), {}, {\n    [key]: `${key}${version}`\n  }), {});\n}\nconst xcm = {\n  XcmOrigin: {\n    _enum: {\n      Xcm: 'MultiLocation'\n    }\n  },\n  XcmpMessageFormat: {\n    _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']\n  },\n  XcmAssetId: {\n    _enum: {\n      Concrete: 'MultiLocation',\n      Abstract: 'Bytes'\n    }\n  },\n  InboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  OutboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  MultiAssets: 'Vec<MultiAsset>'\n};\nconst location = {\n  BodyId: {\n    _enum: {\n      Unit: 'Null',\n      Named: 'Vec<u8>',\n      Index: 'Compact<u32>',\n      Executive: 'Null',\n      Technical: 'Null',\n      Legislative: 'Null',\n      Judicial: 'Null'\n    }\n  },\n  BodyPart: {\n    _enum: {\n      Voice: 'Null',\n      Members: 'Compact<u32>',\n      Fraction: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      AtLeastProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      MoreThanProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      }\n    }\n  },\n  InteriorMultiLocation: 'Junctions',\n  NetworkId: {\n    _enum: {\n      Any: 'Null',\n      Named: 'Vec<u8>',\n      Polkadot: 'Null',\n      Kusama: 'Null'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, location), xcm), v0), v1), v2), mapXcm(XCM_LATEST)), {}, {\n    DoubleEncodedCall: {\n      encoded: 'Vec<u8>'\n    },\n    XcmOriginKind: {\n      _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n    },\n    Outcome: {\n      _enum: {\n        Complete: 'Weight',\n        Incomplete: '(Weight, XcmErrorV0)',\n        Error: 'XcmErrorV0'\n      }\n    },\n    QueryId: 'u64',\n    QueryStatus: {\n      _enum: {\n        Pending: {\n          responder: 'VersionedMultiLocation',\n          maybeNotify: 'Option<(u8, u8)>',\n          timeout: 'BlockNumber'\n        },\n        Ready: {\n          response: 'VersionedResponse',\n          at: 'BlockNumber'\n        }\n      }\n    },\n    QueueConfigData: {\n      suspendThreshold: 'u32',\n      dropThreshold: 'u32',\n      resumeThreshold: 'u32',\n      thresholdWeight: 'Weight',\n      weightRestrictDecay: 'Weight'\n    },\n    VersionMigrationStage: {\n      _enum: {\n        MigrateSupportedVersion: 'Null',\n        MigrateVersionNotifiers: 'Null',\n        NotifyCurrentTargets: 'Option<Bytes>',\n        MigrateAndNotifyOldTargets: 'Null'\n      }\n    },\n    VersionedMultiAsset: {\n      _enum: {\n        V0: 'MultiAssetV0',\n        V1: 'MultiAssetV1',\n        V2: 'MultiAssetV2'\n      }\n    },\n    VersionedMultiAssets: {\n      _enum: {\n        V0: 'Vec<MultiAssetV0>',\n        V1: 'MultiAssetsV1',\n        V2: 'MultiAssetsV2'\n      }\n    },\n    VersionedMultiLocation: {\n      _enum: {\n        V0: 'MultiLocationV0',\n        V1: 'MultiLocationV1',\n        V2: 'MultiLocationV2'\n      }\n    },\n    VersionedResponse: {\n      V0: 'ResponseV0',\n      V1: 'ResponseV1',\n      V2: 'ResponseV2'\n    },\n    VersionedXcm: {\n      _enum: {\n        V0: 'XcmV0',\n        V1: 'XcmV1',\n        V2: 'XcmV2'\n      }\n    },\n    XcmVersion: 'u32'\n  })\n};"]},"metadata":{},"sourceType":"module"}