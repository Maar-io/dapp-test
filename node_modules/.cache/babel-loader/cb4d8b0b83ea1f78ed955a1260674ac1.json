{"ast":null,"code":"// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { createSignedBlockExtended } from \"../type/index.js\";\nimport { memo } from \"../util/index.js\";\n/**\n * @name subscribeNewBlocks\n * @returns The latest block & events for that block\n */\n\nexport function subscribeNewBlocks(instanceId, api) {\n  return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap(header => {\n    const blockHash = header.createdAtHash || header.hash; // we get the block first, setting up the registry\n\n    return api.queryAt(blockHash).pipe(switchMap(queryAt => combineLatest([of(header), api.rpc.chain.getBlock(blockHash), queryAt.system.events()])));\n  }), map(([header, block, events]) => createSignedBlockExtended(block.registry, block, events, header.validators))));\n}","map":{"version":3,"sources":["/Users/mario/p/dapp-test/node_modules/@polkadot/api-derive/chain/subscribeNewBlocks.js"],"names":["combineLatest","map","of","switchMap","createSignedBlockExtended","memo","subscribeNewBlocks","instanceId","api","derive","chain","subscribeNewHeads","pipe","header","blockHash","createdAtHash","hash","queryAt","rpc","getBlock","system","events","block","registry","validators"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,GAAxB,EAA6BC,EAA7B,EAAiCC,SAAjC,QAAkD,MAAlD;AACA,SAASC,yBAAT,QAA0C,kBAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAwCC,GAAxC,EAA6C;AAClD,SAAOH,IAAI,CAACE,UAAD,EAAa,MAAMC,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBC,iBAAjB,GAAqCC,IAArC,CAA0CT,SAAS,CAACU,MAAM,IAAI;AAC1F,UAAMC,SAAS,GAAGD,MAAM,CAACE,aAAP,IAAwBF,MAAM,CAACG,IAAjD,CAD0F,CACnC;;AAEvD,WAAOR,GAAG,CAACS,OAAJ,CAAYH,SAAZ,EAAuBF,IAAvB,CAA4BT,SAAS,CAACc,OAAO,IAAIjB,aAAa,CAAC,CAACE,EAAE,CAACW,MAAD,CAAH,EAAaL,GAAG,CAACU,GAAJ,CAAQR,KAAR,CAAcS,QAAd,CAAuBL,SAAvB,CAAb,EAAgDG,OAAO,CAACG,MAAR,CAAeC,MAAf,EAAhD,CAAD,CAAzB,CAArC,CAAP;AACD,GAJgF,CAAnD,EAI1BpB,GAAG,CAAC,CAAC,CAACY,MAAD,EAASS,KAAT,EAAgBD,MAAhB,CAAD,KAA6BjB,yBAAyB,CAACkB,KAAK,CAACC,QAAP,EAAiBD,KAAjB,EAAwBD,MAAxB,EAAgCR,MAAM,CAACW,UAAvC,CAAvD,CAJuB,CAAnB,CAAX;AAKD","sourcesContent":["// Copyright 2017-2021 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { createSignedBlockExtended } from \"../type/index.js\";\nimport { memo } from \"../util/index.js\";\n/**\n * @name subscribeNewBlocks\n * @returns The latest block & events for that block\n */\n\nexport function subscribeNewBlocks(instanceId, api) {\n  return memo(instanceId, () => api.derive.chain.subscribeNewHeads().pipe(switchMap(header => {\n    const blockHash = header.createdAtHash || header.hash; // we get the block first, setting up the registry\n\n    return api.queryAt(blockHash).pipe(switchMap(queryAt => combineLatest([of(header), api.rpc.chain.getBlock(blockHash), queryAt.system.events()])));\n  }), map(([header, block, events]) => createSignedBlockExtended(block.registry, block, events, header.validators))));\n}"]},"metadata":{},"sourceType":"module"}